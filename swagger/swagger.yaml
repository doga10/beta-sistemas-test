openapi: 3.0.0
info:
  title: 'API Docs'
  version: '0.1'
servers:
  -
    url: 'http://localhost:8000/api'
paths:
  /api/login:
    post:
      operationId: 'App\Http\Controllers\API\AuthController::login'
      parameters:
        -
          name: password
          in: query
          description: password
          required: true
          schema:
            type: string
        -
          name: email
          in: query
          description: E-mail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Returns user authentication'
  /api/redirect:
    get:
      operationId: 'App\Http\Controllers\API\AuthController::facebookRedirect'
      responses:
        '200':
          description: 'Redirect to authentication facebook'
  /api/callback:
    get:
      operationId: 'App\Http\Controllers\API\AuthController::facebookCallback'
      responses:
        '200':
          description: 'authentication to facebook'
  /api/contacts:
    get:
      operationId: 'App\Http\Controllers\API\ContactController::index'
      parameters:
        -
          name: bearer
          in: header
          description: 'bearer token'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Returns contacts'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
    post:
      operationId: 'App\Http\Controllers\API\ContactController::store'
      parameters:
        -
          name: bearer
          in: header
          description: 'bearer token'
          required: true
          schema:
            type: string
        -
          name: name
          in: query
          description: username
          required: true
          schema:
            type: string
        -
          name: user_id
          in: query
          description: 'user id'
          required: true
          schema:
            type: integer
        -
          name: email
          in: query
          description: E-mail
          required: true
          schema:
            type: string
        -
          name: phone
          in: query
          description: phone
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 'Returns contacts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
  /api/users/contacts:
    get:
      operationId: 'App\Http\Controllers\API\ContactController::contacts'
      parameters:
        -
          name: bearer
          in: header
          description: 'bearer token'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Returns contacts'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
  '/api/contacts/{id}':
    get:
      operationId: 'App\Http\Controllers\API\ContactController::show'
      parameters:
        -
          name: bearer
          in: header
          description: 'bearer token'
          required: true
          schema:
            type: string
        -
          name: id
          in: path
          description: 'ID Contact'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Returns contacts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
    put:
      operationId: 'App\Http\Controllers\API\ContactController::update'
      parameters:
        -
          name: bearer
          in: header
          description: 'bearer token'
          required: true
          schema:
            type: string
        -
          name: id
          in: path
          description: 'ID Contact'
          required: true
          schema:
            type: integer
        -
          name: name
          in: query
          description: username
          required: true
          schema:
            type: string
        -
          name: email
          in: query
          description: E-mail
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: phone
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Returns contacts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
    delete:
      operationId: 'App\Http\Controllers\API\ContactController::destroy'
      parameters:
        -
          name: bearer
          in: header
          description: 'bearer token'
          required: true
          schema:
            type: string
        -
          name: id
          in: path
          description: 'ID Contact'
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 'remove contact'
  /api/users:
    get:
      operationId: 'App\Http\Controllers\API\UserController::index'
      parameters:
        -
          name: bearer
          in: header
          description: 'bearer token'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Returns contacts'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      operationId: 'App\Http\Controllers\API\UserController::store'
      parameters:
        -
          name: name
          in: query
          description: username
          required: true
          schema:
            type: string
        -
          name: email
          in: query
          description: E-mail
          required: true
          schema:
            type: string
        -
          name: password
          in: query
          description: Password
          required: true
          schema:
            type: string
      responses:
        '201':
          description: 'Returns contacts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  '/api/users/{id}':
    get:
      operationId: 'App\Http\Controllers\API\UserController::show'
      parameters:
        -
          name: bearer
          in: header
          description: 'bearer token'
          required: true
          schema:
            type: string
        -
          name: id
          in: path
          description: 'ID User'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Returns contacts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      operationId: 'App\Http\Controllers\API\UserController::update'
      parameters:
        -
          name: bearer
          in: header
          description: 'bearer token'
          required: true
          schema:
            type: string
        -
          name: id
          in: path
          description: 'ID Contact'
          required: true
          schema:
            type: integer
        -
          name: name
          in: query
          description: username
          required: true
          schema:
            type: string
        -
          name: email
          in: query
          description: E-mail
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Returns contacts'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      operationId: 'App\Http\Controllers\API\UserController::destroy'
      parameters:
        -
          name: bearer
          in: header
          description: 'bearer token'
          required: true
          schema:
            type: string
        -
          name: id
          in: path
          description: 'ID Contact'
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 'remove user'
components:
  schemas:
    Contact:
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    SocialFacebookAccount:
        'user_id', 'provider_user_id', 'provider'
      properties:
        id:
          type: integer
        user_id:
          type: integer
        provider_user_id:
          type: string
        provider:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    User:
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        password:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
